var tipuesearch = {"pages": [{'title': '關於', 'text': 'https://github.com/mdecycu/cmsite \n \n 工作 \n', 'tags': '', 'url': '關於.html'}, {'title': '布萊頓1', 'text': 'https://en.wikipedia.org/wiki/Python_（程式語言） \n 例子： \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python教學： \n https://docs.python.org/3/tutorial/ \n Python的平衡介紹 \n 縮排（Python採用4個Spaces縮排，以介面執行範圍） \n 變數（ Python 關鍵字 ） \n 註（#單行註解、三單標註或三雙標註標註多行註解） \n 數 (整數 int(), 浮點數 float()) \n 字串 （字符串） \n print (Python 內建函數,  print() 函數式) \n Python是控制流程工具 \n 為了 \n 如果 \n 範圍 \n 開放 \n 讀 \n 清單 \n 元組 \n 字典 \n 功能 \n 嘗試...除了 \n 休息時間 \n 曾經 \n 類別 \n 此頁面示範如何在同一頁面下加入多個線上Ace編輯器與執行按鈕（ practice_html.txt 動態頁面超檔案）。 \n Practice_html.txt 動態頁面超檔案應該可以在啟動Brython時，設定分割.py檔案放入downloads/py目錄中引用。 \n 也所有即將出現的對應 html 也使用 Brython 產生，然後編寫為 類別 後，在範例匯入時交叉 實例 引用。 \n <!-- 啟動 Brython --> \n<腳本> \n視窗.onload=函數(){ \nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']}); \n} \n</> 腳本 \n 從1累加到100： \n 1加到100 \n 將 iterable 與 iterator 相關說明 ，利用 Brython 與 Ace Editor 整理頁面。 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n 文件名稱： .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n 跑步   輸出   明確輸出區 清晰的繪圖區 重新載入 \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從1累加到100第2部分： \n 1加到100 cango_三_齒輪 BS蛇 人工智慧俄羅斯區塊鏈 旋轉塊 \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n 文件名稱： .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n 跑步   輸出   明確輸出區 清晰的繪圖區 重新載入 \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n', 'tags': '', 'url': '布萊頓1.html'}, {'title': '每周作業', 'text': '', 'tags': '', 'url': '每周作業.html'}, {'title': 'W2', 'text': '說明安裝 Apps, 如何設定網路, 查驗是否正確連網 \n 說明如何利用近端可攜系統執行 C 程式, 如何利用 ChatGPT 進行對話 \n 說明如何利用 Replit 協助編輯網頁內容 \n 說明如何 connect Replit to Github, 如何建立個人網站並利用 Replit 啟動編輯網站 \n', 'tags': '', 'url': 'W2.html'}, {'title': 'w3', 'text': '\xa0 \n', 'tags': '', 'url': 'w3.html'}, {'title': '零件繪製', 'text': '', 'tags': '', 'url': '零件繪製.html'}, {'title': '製作滑軌永動機', 'text': '1.本體軌道製作 \n \n 2.球體 \n \n \n 3.組合後的成品 \n \n 心得: \n 在製作滑軌永動機時,我發現到滑軌可以用簡單的方法製造出來，然後還需要用一些指令來讓球在滑軌之間移動，在這次的作業中我又重新複習了一次指令的指令，在畫完這個零件後最重要的模擬有點難度，所以跟同學討論的時候也遇到很多困難。 \n \n', 'tags': '', 'url': '製作滑軌永動機.html'}, {'title': '三角永動機', 'text': '\n 心得: \n 這個永動機雖然比較容易畫出來，但是在模擬的時候還是遇到很多困難，跟同學討論也不一定能夠解決問題，跑去看老師的影片也不一定能夠模擬成功。 \n 以上是我跟41136103吳裕源同學一同繪製\xa0 \n 繪製日期:1/2 \n \n 維護網站 \n \n w5 之前的教學影片: \n 說明安裝 Apps, 如何設定網路, 查驗是否正確連網 \n 說明如何利用近端可攜系統執行 C 程式, 如何利用 ChatGPT 進行對話 \n 說明如何利用 Replit 協助編輯網頁內容 \n 說明如何 connect Replit to Github, 如何建立個人網站並利用 Replit 啟動編輯網站 \n 有關電腦輔助設計室網路設定說明 \n 處理 .replit 與 replit.nix 中的舊 Python 設定問題 \n 說明如何為 site-個人github帳號 倉儲設定 Github Pages \xa0(已經放棄使用 site- 倉儲, 改用學員帳號下的 cp2023 倉儲) \n w5 1b cp2023 與 Replit C 程式執行環境說明影片.mp4 \n 說明如何進行倉儲的 pull request \n 評分網站與倉儲: \n cp2023 1a 學員網站與倉儲連結 \n cp2023 1b 學員網站與倉儲連結 \n \n', 'tags': '', 'url': '三角永動機.html'}, {'title': '分組作業', 'text': '第六組作業 \n 分配工作： \n 發明者 \n 成員： \n 41123204 王廷銨 \n 41132222 林育安 \n 簡報 \n 永動機範例: \n \n \n 1.\xa0 以下是參考onshape Perpetual Motion Simulator 並且使用Solid Edge所畫 \n 1.底座 \n \n 2.繪製滑軌 \n \n \n 3.圓球 \n \n \n 4.柱子 \n \n 5.漏斗 \n \n \n 6.完成組合圖 \n \n 心得: \n 在跟組員一起繪製這個零件與討論的時候雖然有些問題，還好有chatgpt我們才可以快速用好。 \n \n', 'tags': '', 'url': '分組作業.html'}, {'title': '作動模擬影片', 'text': '1.漏斗永動機 \n 影片 \n 2.滑軌 永動機 \n 影片 \n 3.三角永動機 \n 影片 \n \n', 'tags': '', 'url': '作動模擬影片.html'}, {'title': '網站維護方法', 'text': '', 'tags': '', 'url': '網站維護方法.html'}, {'title': 'Replit', 'text': '如何維護網頁? \n 1.當在動態網站save剛更新的資料內容後 \n 2.點擊convert轉換網站 \n 3.回到replit點擊Git \n 4.在update輸入框中輸入更新內容的代名稱 \n 5.點選stage&commit(會看到更新的內容已被載入) \n 6.最後點擊push>到github個人倉儲看是否有亮綠燈 \n 有(以上傳完成) \n 沒有(亮黃燈或亮紅燈代表還在上傳中) \n \n', 'tags': '', 'url': 'Replit.html'}, {'title': '學期倉儲與網站評分標準', 'text': 'A: 是否按照進度明確標示倉儲的改版歷程 \xa0 (以前沒有，後來更新有標示) \n B: 是否根據 \xa0 IPv4 與 IPv6 \xa0 網路環境設定進行作法討論 \xa0 (有) \n C: 是否就 \xa0 Replit、s.cycu.org 與 localhost \xa0 情境下對個人與分組倉儲進行設定操作 \xa0 (有) \n D: 是否就所分配的 \xa0 CAD 套件 從安裝設定到繪圖提供內容參考 \xa0 (有) \n E: 是否使用所分配的 CAD 套件完成 專案一零組件繪圖 , 並提供零組件下載 \xa0 (有) \n F: 是否將自行繪製的專案一零組件 轉入 CoppeliaSim \xa0 (有) \n G: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案一轉入的零組件設定感測器, 並進行 鋼球永動模擬 \n H: 是否實際操作 \xa0 Triangle 軌道系統 的鋼球永動模擬 \xa0 (有) \n I: 是否完成 W15 的平面雙 U 迴路上的 鋼球永動系統繪圖、轉檔與系統模擬 \n J: 是否使用所分配的 CAD 套件完成 專案二 1D 平台零組件繪圖 , 並提供零組件下載 \n K: 是否利用 \xa0 ZMQ Remote API Python \xa0 對專案二轉入的零組件設定感測器, 並進行鋼球永動模擬 \n L: 是否針對專案二的 1D 平台鋼球平衡系統所需的 \xa0 PID 控制理論 進行資料收集與 ChatGPT 對答 \n \n', 'tags': '', 'url': '學期倉儲與網站評分標準.html'}, {'title': '課程總結', 'text': '心得總結: \n 電腦輔助設計實習這門課，我從一開始到現在上了很多次課，從原本的不會建網站到會建，跟把資料推上去個人網站遇到了困難重重。在分組報告裡我也學到了如何跟隊友協調分配工作，還有學習不同的繪圖軟體，讓我們學到了很多不同的畫圖軟體，老師也丟了許多影片讓我們回家看，雖然最後轉檔模擬不成功，無法麻你像老師那樣，但是我還是盡量讓他順利的作動成老師模擬的樣子。這門課讓我學到跟程式有關的知識，也讓我知道非機械期的專業。最後在這堂課中雖然有苦有甜，也撐到學期末了 ，感謝老師的教導。 \n  editor2 結束  \n \n \n', 'tags': '', 'url': '課程總結.html'}]};